---
- name: Kubernetes master node installation
  hosts: kubemaster
  vars:
    hostname: "kube-master"
    kubemaster_version: "1.31.5-1.1"
    containerd_version: "1.7.12-0ubuntu4"
    package_install:
      [
        { "package": "kubeadm={{ kubemaster_version }}" },
        { "package": "kubelet={{ kubemaster_version }}" },
        { "package": "kubectl={{ kubemaster_version }}" },
        { "package": "containerd={{ containerd_version }}" },
      ]

  become: true
  gather_facts: yes
  tasks:
    - name: "checks and debug"
      block:
        - name: "OS check"
          assert:
            that:
              - ansible_os_family == "Debian"
          tags:
            - kubemaster

        - name: "Display hostname"
          debug:
            msg: "inventory_hostname {{ inventory_hostname }}"
          tags:
            - kubemaster

        - name: "Environment preparation"
          become: true
          block:
          - name: "Domain name" 
            shell: |
              hostnamectl set-hostname {{ hostname }}
            tags:
              - kubemaster

    - name: Manage kubeadm repository
      block:
        - name: kubeadm repository keyring
          ansible.builtin.get_url:
            url: https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key
            dest: /usr/share/keyrings/kubeadm-archive-keyring.gpg.armored
          tags:
            - kubemaster

        - name: De-Armor kubeadm GPG key
          shell: gpg --dearmor < /usr/share/keyrings/kubeadm-archive-keyring.gpg.armored > /usr/share/keyrings/kubeadm-archive-keyring.gpg
          args:
            creates: /usr/share/keyrings/kubeadm-archive-keyring.gpg
          tags:
            - kubemaster

        - name: kubeadm repository
          ansible.builtin.apt_repository:
            repo: "deb [signed-by=/usr/share/keyrings/kubeadm-archive-keyring.gpg]  https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /"
            state: present
            filename: kubeadm
            update_cache: false
          tags:
            - kubemaster

        - name: Run the equivalent of "apt-get update" as a separate step
          ansible.builtin.apt:
            update-cache: yes
          tags:
          - kubemaster
          
        - name: "Install packages"
          ansible.builtin.apt:
            name: "{{ item.package }}"
            state: present
          retries: 3
          with_items: "{{ package_install }}"
          tags:
          - kubemaster

        - name: Containerd directory
          file:
            path: /etc/containerd
            state: directory
          tags:
            - kubemaster

        - name: Generate containerd config file
          shell: containerd config default | sed 's/SystemdCgroup = false/SystemdCgroup = true/' | tee /etc/containerd/config.toml
          args:
            creates: /etc/containerd/config.toml
          tags:
            - kubemaster

        - name: Restart containerd
          command: systemctl restart containerd
          tags:
            - kubemaster


    - name: "Network setup"
      become: true
      block:
        - name: "Network setup"
          shell: |
            cat >/etc/netplan/60-devnet.yaml <<-EOF
            network:
              version: 2
              ethernets:
                eth0:
                  addresses:
                  - 192.168.10.12/24
                  nameservers:
                    addresses:
                    - 192.168.10.2
                  dhcp6: no
                eth1:
                  addresses:
                  - 192.168.0.162/24
                  nameservers:
                    addresses:
                    - 192.168.0.1
                  dhcp6: no
            EOF
          tags:
          - kubemaster
          - kubemaster-netplan
