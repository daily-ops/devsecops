#cloud-config
#
# Cloud Init user-data config. 
# Do not alter first line of this file.
# https://cloudinit.readthedocs.io/en/latest/

# https://askubuntu.com/questions/1513521/autoinstall-in-cloud-init-stops-with-question-continue-with-autoinstall-yesn
runcmd:
  - [eval, 'echo $(cat /proc/cmdline) "autoinstall" > /root/cmdline']
  - [eval, 'mount -n --bind -o ro /root/cmdline /proc/cmdline']
  - [eval, 'snap restart subiquity.subiquity-server']
  - [eval, 'snap restart subiquity.subiquity-service']

autoinstall:
  version: 1
  # on the Ubuntu Server ISO, install with the minimal source
  source:
    id: ubuntu-server-minimal
  
  locale: en_US.UTF-8
  network:
      network:
          version: 2
          ethernets:
            # enp0s17 is the default interface name of the built-in NIC comes with the initial installation
              enp0s17:
                 dhcp4: yes
                 dhcp6: no
                 dhcp4-overrides:
                    use-routes: false                 
  apt:
    geoip: false
    primary:
      - arches: [default]
        search:
          - http://au.archive.ubuntu.com/ubuntu/
          - http://archive.ubuntu.com
  keyboard:
    layout: us
  storage:
    layout:
      name: lvm
  identity:
    hostname: basebox
    username: ansible
    # mkpasswd -m sha-512 --salt=An1s1bl3
    password: $6$An1s1bl3$Z52BZB.nDHMnV9yPJ9.9jkJLCvmV/A3EIBe.oUHK4Dhd1K7TekJSlPjh.K0uJaAfysPDRM0PyLW95AfvTnn4q1
  ssh:
    install-server: true
    authorized-keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDjPfBVZlK1SEcroIknIYlrXCoI3nXzEt1SYOkDMJc91smIRHKv2g6wKm/oJJoSeXlxa92kNs8R60qiKgtxUS768gKWFwaMxmiOx+2xh4moJMatfQbfECd6NQ5Kugb4OKFQYOdrKd6bDFnXMjfEKfMF7nrV6RS/rRYInQWGwHAnQ+6o6JEOsKKnQFvmOf4fnrgxhN5vT7OoQGHvLfRHYM6wp2UAK/N4EwRW2vZSiQKCgQRMoWEpCNOjK7+QvmgDVS17DUN4ea+zMK4koLDt8uOhKoy/9SHOWr/Dcds+yvrYAUQGBrZpNCvImU9914XZ4nx2VOzjEaBT2C1LOKX2Lm6H6ZQK3adnRq9XY3acmamwO2P2ySCius1ftLlDZl9FE3uWv1LH3xOzIYCC73qmeeTab2fDAqG7gRvvSfRQEHmN+cNoTD9jxwIr4gMs6LSsOtS3+kib34N8s3IR0H+FFDQ3/kwkeFAbTurMdwvfXoekn3ex6UcMbEoCdaE1KsGh7ns= ansible
    allow-pw: true
  packages:
    - ca-certificates
    - software-properties-common
    - python3-pip
    - python3-venv
  output:
    init: "> /var/log/cloud-init.log"
    config: [ ">> /tmp/foo.out", "> /var/log/cloud-config.log" ]
    final:
      output: "| tee /tmp/final.stdout | tee /var/log/cloud-final.log"
      error: "&1"
  final_message: "System installation complete."
  user-data:
    timezone: "Australia/Melbourne"
    disable_root: true
    package_update: true
    package_upgrade: false
    write_files:
      - path: /etc/sudoers.d/ansible
        owner: 'root:root'
        permissions: '0644'
        content:
          ansible ALL=(ALL) NOPASSWD:ALL

      - encoding: b64
        path: /etc/ansible/facts.d/vmhost.fact
        owner: 'root:root'
        permissions: '0755'
        defer: true
        content: IyEvdXNyL2Jpbi9lbnYgc2gKZWNobyAie1widm0tY2xvdWQtaW5pdFwiIDogXCJ0cnVlXCJ9Ig==
  late-commands:
    - curtin in-target --target=/target -- add-apt-repository --yes --update ppa:ansible/ansible
    - curtin in-target --target=/target -- apt install ansible -y -q
    - mkdir -p /target/etc/ansible/facts.d
    - sed -i 's/^GRUB_CMDLINE_LINUX_DEFAULT="\(.*\)"$/GRUB_CMDLINE_LINUX_DEFAULT=="\1 net.ifnames=0 biosdevname=0"/g' /target/etc/default/grub
    - sed -i 's/^GRUB_CMDLINE_LINUX_DEFAULT=" net.ifnames/GRUB_CMDLINE_LINUX_DEFAULT="net.ifnames/g' /target/etc/default/grub
    - curtin in-target --target=/target -- update-grub
    - mkdir -p /target/etc/opt/img/
    - curtin in-target --target=/target -- logger "finished late-commands"
